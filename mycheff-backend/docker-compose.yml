version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: mycheff-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: mycheff
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    networks:
      - mycheff-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d mycheff"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: mycheff-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mycheff-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # NestJS Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: mycheff-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_NAME: mycheff
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRES_IN: 7d
      PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mycheff-network
    volumes:
      - ./uploads:/app/uploads
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Admin Panel (Python Flask)
  admin-panel:
    build:
      context: ./admin-panel
      dockerfile: Dockerfile
    container_name: mycheff-admin
    restart: unless-stopped
    environment:
      FLASK_ENV: production
      DATABASE_URL: postgresql://postgres:password@postgres:5432/mycheff
      SECRET_KEY: your-super-secret-admin-key-change-this-in-production
      API_BASE_URL: http://backend:3001/api/v1
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      - mycheff-network
    volumes:
      - ./uploads:/app/uploads

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: mycheff-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - admin-panel
    networks:
      - mycheff-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  mycheff-network:
    driver: bridge 