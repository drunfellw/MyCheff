version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: mycheff-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mycheff-network

  # Redis Cache & Queue (for future use)
  redis:
    image: redis:7-alpine
    container_name: mycheff-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - mycheff-network

  # NestJS API Application
  api:
    build:
      context: ./mycheff-backend
      dockerfile: Dockerfile
      target: development
    container_name: mycheff-api
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: postgres
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: 123
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: mycheff-jwt-secret-key-2024
      PORT: 3001
    depends_on:
      - postgres
      - redis
    networks:
      - mycheff-network
    volumes:
      - ./mycheff-backend:/app
      - /app/node_modules

volumes:
  postgres_data:
  redis_data:

networks:
  mycheff-network:
    driver: bridge 